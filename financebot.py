import sqlite3

import telebot


from telebot import types
from config import token


bot = telebot.TeleBot(token)

@bot.message_handler(commands=['start']) 
def send_welcome(message):
	bot.reply_to(message, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ <b>{0} {1}</b>, –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç. –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏ <b>–¥–æ—Ö–æ–¥–æ–≤</b> –∏ <b>—Ä–∞—Å—Ö–æ–¥–æ–≤</b> –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤.\n<b>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n1) /stats - –ø–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.\n2) /fullstats - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.\n3) /earnings - –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ –¥–æ—Ö–æ–¥—ã.\n4) /spending - –∑–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã.\n5) /delete - —É–¥–∞–ª–∏—Ç—å –≤—Å—é —Å–≤–æ—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.".format(message.from_user.first_name, message.from_user.last_name), parse_mode = 'html')

@bot.message_handler(commands=['earnings']) 
def send_earnings(message):
	keyboard = types.ReplyKeyboardMarkup() 
	work = types.KeyboardButton(text='üë®‚Äçüíº –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞')
	under_work = types.KeyboardButton(text='üë®‚Äçüíª –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
	keyboard.add(work)
	keyboard.add(under_work)
	bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup = keyboard)

@bot.message_handler(commands=['spending']) 
def send_spendings(message):
	keyboard = types.ReplyKeyboardMarkup() 
	House = types.KeyboardButton(text='üè† –î–æ–º')
	Food_products = types.KeyboardButton(text='üçû –ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è')
	Entertainments = types.KeyboardButton(text='üé° –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è')
	Eating_out = types.KeyboardButton(text='üç® –ï–¥–∞ –≤–Ω–µ –¥–æ–º–∞')
	Clothing = types.KeyboardButton(text='üëï –û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å')
	Transport = types.KeyboardButton(text='üöò –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')
	Services_communications = types.KeyboardButton(text='‚òé –£—Å–ª—É–≥–∏ –∏ —Å–≤—è–∑–∏')
	Health = types.KeyboardButton(text='üë®‚Äç‚öïÔ∏è –ó–¥–æ—Ä–æ–≤—å–µ')
	Without_category = types.KeyboardButton(text='–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
	keyboard.add(House,Food_products,Entertainments,Eating_out,Clothing,Transport,Services_communications,Health,Without_category)
	bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup = keyboard)



@bot.message_handler(commands=['stats']) 
def show_statistic(message):
	with sqlite3.connect('Finance.db') as connect: # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
		cur =  connect.cursor()
		cur.execute(''' SELECT SUM(income) FROM earnings;''')
		all_earn = cur.fetchone()
		cur.execute(''' SELECT category, MAX(income) FROM earnings; ''')
		max_earn = cur.fetchall()
		cur.execute(''' SELECT SUM(costs) FROM spending; ''')
		all_spend = cur.fetchone()
		cur.execute(''' SELECT categories, MAX(costs) FROM spending; ''')
		max_spend = cur.fetchall()
		profit = all_earn[0] - all_spend[0]

	bot.send_message(message.from_user.id,'<b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n<u>–ü–æ–ª–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç</u> <b>{0}</b> <i>–†—É–±–ª–µ–π</i>.\n<u>–ù–∞–∏–±–æ–ª–µ–µ –ø—Ä–∏–±—ã–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫:</u> <b>{1}</b> <i>–†—É–±–ª–µ–π</i> ({2}).\n<u>–†–∞—Å—Ö–æ–¥—ã —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç</u> <b>{3}</b> <i>–†—É–±–ª–µ–π</i>\n<u>–ù–∞–∏–±–æ–ª—å—à–∏–π —Ä–∞—Å—Ö–æ–¥:</u> <b>{4}</b> <i>–†—É–±–ª–µ–π</i> ({5})\n<u>–í–∞—à–∞ –ø—Ä–∏–±—ã–ª—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç</u> <b>{6}</b> <i>–†—É–±–ª–µ–π</i>'.format(all_earn[0],max_earn[0][1],max_earn[0][0],all_spend[0],max_spend[0][1],max_spend[0][0],profit), parse_mode = 'html')


@bot.message_handler(commands=['fullstats']) 
def show_fullstatistic(message):
	with sqlite3.connect('Finance.db') as connect:
		cur =  connect.cursor()
		cur.execute(''' SELECT category,income FROM earnings ORDER BY income DESC;''')
		earn_result = cur.fetchall()
		cur.execute(''' SELECT categories,costs FROM spending ORDER BY costs DESC;''')
		spend_result = cur.fetchall()

	bot.send_message(message.from_user.id,'<b>–ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>:\n<u>–î–æ—Ö–æ–¥</u>:\n{0} - <b>{1}</b> <i>–†—É–±–ª–µ–π</i>\n{2} - <b>{3}</b> <i>–†—É–±–ª–µ–π</i>\n<u>–†–∞—Å—Ö–æ–¥—ã:</u>\n{4} - <b>{5}</b> <i>–†—É–±–ª–µ–π</i>\n{6} - <b>{7}</b> <i>–†—É–±–ª–µ–π</i>\n{8} - <b>{9}</b> <i>–†—É–±–ª–µ–π</i>\n{10} - <b>{11}</b> <i>–†—É–±–ª–µ–π</i>\n{12} - <b>{13}</b> <i>–†—É–±–ª–µ–π</i>\n{14} - <b>{15}</b> <i>–†—É–±–ª–µ–π</i>\n{16} - <b>{17}</b> <i>–†—É–±–ª–µ–π</i>\n{18} - <b>{19}</b> <i>–†—É–±–ª–µ–π</i>'.format(earn_result[0][0],earn_result[0][1],earn_result[1][0],earn_result[1][1],spend_result[0][0],spend_result[0][1],spend_result[1][0],spend_result[1][1],spend_result[2][0],spend_result[2][1],spend_result[3][0],spend_result[3][1],spend_result[4][0],spend_result[4][1],spend_result[5][0],spend_result[5][1],spend_result[6][0],spend_result[6][1],spend_result[7][0],spend_result[7][1],spend_result[8][0],spend_result[8][1]), parse_mode = 'html')

@bot.message_handler(commands=['delete'])
def delete_statistic(message):
	with sqlite3.connect('Finance.db') as connect:
		cur =  connect.cursor()
		cur.execute(''' UPDATE earnings SET income = 0 WHERE income > 0 ''')
		cur.execute (''' UPDATE spending SET costs = 0 WHERE costs > 0 ''')
	bot.send_message(message.from_user.id, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞')

@bot.message_handler(func=lambda m: True)
def echo_all(message):
	if message.text == 'üë®‚Äçüíº –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_earning,'–û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞')
	elif message.text == 'üë®‚Äçüíª –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_earning, '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫')
	elif message.text == 'üè† –î–æ–º':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–î–æ–º')
	elif message.text == 'üçû –ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è')
	elif message.text == 'üé° –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è')
	elif message.text == 'üç® –ï–¥–∞ –≤–Ω–µ –¥–æ–º–∞':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–ï–¥–∞ –≤–Ω–µ –¥–æ–º–∞')
	elif message.text == 'üëï –û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å')
	elif message.text == 'üöò –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç')
	elif message.text == '‚òé –£—Å–ª—É–≥–∏ –∏ —Å–≤—è–∑–∏':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–£—Å–ª—É–≥–∏ –∏ —Å–≤—è–∑–∏')
	elif message.text == 'üë®‚Äç‚öïÔ∏è –ó–¥–æ—Ä–æ–≤—å–µ':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–ó–¥–æ—Ä–æ–≤—å–µ')
	elif message.text == '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏, –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–Ω–µ—Å—Ç–∏',reply_markup = types.ReplyKeyboardRemove())
		bot.register_next_step_handler(message, send_spending,'–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')


def decorator(func):
	''' –î–µ–∫–æ—Ä–∞—Ç–æ—Ä  '''
	def inner(message,category):
		sum_ = 0
		while sum_ == 0:
			try:
				sum_ = int(message.text)
			except Exception:
				bot.send_message(message.from_user.id, '–ù–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –µ—Å–ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –æ–¥–Ω—É, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏')
				break
		if sum_ == 0:
			bot.register_next_step_handler(message, inner,category)
		else:
			func(message,category)

	return inner

@decorator
def send_earning(message,category):
	sum_ = int(message.text)
	with sqlite3.connect('Finance.db') as connect: 
		cur =  connect.cursor()
		cur.execute(f'''UPDATE earnings SET income = income + {sum_} 
		WHERE category = '{category}'; ''') 
	bot.send_message(message.from_user.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–∞")

@decorator
def send_spending(message,category):
	sum_ = int(message.text)
	with sqlite3.connect('Finance.db') as connect: 
		cur =  connect.cursor()
		cur.execute(f'''UPDATE spending	SET costs = costs + {sum_}
		WHERE categories = '{category}'; ''') 
	bot.send_message(message.from_user.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–∞")




if __name__ == '__main__':
	bot.polling()
